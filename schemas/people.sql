-- Creating our people schema which will store personal data and whatnot
-- so we'll be trying to keep things in there and clamp down on access.
CREATE SCHEMA people;
CREATE TABLE people.users (
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username text NOT NULL UNIQUE,
    email text NOT NULL UNIQUE,
    name text NOT NULL,
    nickname text NOT NULL,
    has text NOT NULL password text NOT NULL,
    avatar text NOT NULL,
    last_login timestamptz,
    created_at timestamptz NOT NULL DEFAULT NOW(),
    created_by int REFERENCES people.users(user_id),
    updated_at timestamptz,
    updated_by int REFERENCES people.users(user_id),
    deleted_at timestamptz,
    deleted_by int REFERENCES people.users(user_id)
);
CREATE TABLE people.groups (
    group_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL UNIQUE,
    description
);
CREATE TABLE people.group_members (
    user_id int REFERENCES people.users(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    group_id int REFERENCES people.groups(group_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT group_members_pkey PRIMARY KEY (user_id, group_id)
);
CREATE TABLE people.permissions (
    permission_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL UNIQUE,
    description
);
CREATE TABLE people.group_permissions (
    group_id int REFERENCES people.groups(group_id) ON UPDATE CASCADE ON DELETE CASCADE,
    permission_id int REFERENCES people.permissions(permission_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT group_members_pkey PRIMARY KEY (user_id, group_id)
);