CREATE SCHEMA event;
CREATE TYPE event.types AS ENUM (
    'show',
    'meeting',
    'social',
    'other'
);
CREATE TABLE events (
    event_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_type text NOT NULL DEFAULT 'other',
    name text NOT NULL,
    start_date timestamptz NOT NULL,
    end_date timestamptz NOT NULL,
    description text,
    location text,
    status text,
    created_at timestamptz NOT NULL DEFAULT NOW(),
    created_by int REFERENCES people.users(user_id),
    updated_at timestamptz,
    updated_by int REFERENCES people.users(user_id),
    deleted_at timestamptz,
    deleted_by int REFERENCES people.users(user_id),
    CONSTRAINT namechk CHECK (char_length(name) <= 100),
    CONSTRAINT locationchk CHECK (char_length(location) <= 100),
);
CREATE TABLE signups (
    signup_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title text NOT NULL,
    event_id NOT NULL REFERENCES event.events(event_id),
    description text,
    unlock_date timestamptz,
    start_time timestamptz,
    end_time timestamptz,
    CONSTRAINT namechk CHECK (char_length(name) <= 50)
);
CREATE TABLE positions (
    position_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL,
    description text,
    credible NOT NULL DEFAULT TRUE,
    CONSTRAINT namechk CHECK (char_length(name) <= 40)
);